exports.up = async (knex) => {
  await knex.schema
    .createTable('users', (u) => {
      u.increments('user_id')
      u.string('username', 200).notNullable()
      u.string('password', 200).notNullable()
      u.timestamps(false, true)
    })
    .createTable('potlucks', (pl) =>{
      pl.increments('potluck_id')
      pl.integer('user_id')
      .unsigned()
      .notNullable()
      .references('user_id')
      .inTable('users')
      .onDelete('RESTRICT')
      .onUpdate('RESTRICT')
      pl.string('potluck_name', 200).notNullable()
      pl.date('potluck_date').notNullable()
      pl.time('potluck_time').notNullable()
      pl.string('potluck_street', 200).notNullable()
      pl.string('potluck_city', 200).notNullable()
      pl.string('potluck_country', 200).notNullable()
      pl.integer('potluck_zip').notNullable()
    })
    .createTable('foods', (f) => {
      f.increments('food_id')
      f.string('food_name', 200).notNullable()

    })
    .createTable('users_potlucks', (up) => {
      up.increments('user_potluck_id')
      up.integer('potluck_id')
      .unsigned()
      .notNullable()
      .references('potluck_id')
      .inTable('potlucks')
      .onDelete('RESTRICT')
      .onUpdate('RESTRICT')
      up.integer('user_id')
      .unsigned()
      .notNullable()
      .references('user_id')
      .inTable('users')
      .onDelete('RESTRICT')
      .onUpdate('RESTRICT')
      up.boolean('rsvp').defaultTo(1)
    })
    .createTable('potluck_food', (pf) => {
      pf.increments('potluck_food_id')
      pf.integer('food_id')
      .unsigned()
      .notNullable()
      .references('food_id')
      .inTable('foods')
      .onDelete('RESTRICT')
      .onUpdate('RESTRICT')
      pf.integer('potluck_id')
      .unsigned()
      .notNullable()
      .references('potluck_id')
      .inTable('potlucks')
      .onDelete('RESTRICT')
      .onUpdate('RESTRICT')
      pf.integer('user_id')
      .unsigned()
      .notNullable()
      .references('user_id')
      .inTable('users')
      .onDelete('RESTRICT')
      .onUpdate('RESTRICT')
      pf.string('quantity', 128).notNullable()
    })
}

exports.down = async (knex) => {
  await knex.schema.dropTableIfExists('potluck_food')
  await knex.schema.dropTableIfExists('users_potlucks')
  await knex.schema.dropTableIfExists('foods')
  await knex.schema.dropTableIfExists('potlucks')
  await knex.schema.dropTableIfExists('users')
}
